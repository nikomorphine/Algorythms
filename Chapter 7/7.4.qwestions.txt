7.4.1
По опеределению Theta мы знаем, что существуют c1  и c2 такие, что член Theta(n) находится между c1n и c2n. Сделаем индуктивное предположение о том, что c1*m^2 <= T(m) <= c2*m^2, для любых m < n, для достаточно больших n:
c1*n^2 <= c1 max(n^2 - 2n(q + 2) + 2(q + 1)^2) + n <=max(T(n - q - 2) + T(q + 1)) + Theta(n) = T(n), аналогичное доказательство для нижней границы.

7.4.2
Для лучшего случая рекррентное соотношение будет T(n) = min(1≤q≤n−1)((T(q) + T(n − q − 1)) + Theta(n)), методом подстановки легко показать, что решением даного соотношения будет T(n) >= c(n lg n + 2n). 

7.4.3
d/dq(q^2 + (n - q - 1)^2)= 2q - 2(n - q - 1) = 0
4q = 2n + 2 => q = n/2 + 1 -- min, так как функция квадратичная, то на отрезке [0, n] получаем максимальные значения на концах отрезка.

7.4.4
E[X] = S(i = 1 to n - 1)(S(j = i + 1 to n) 2/(j - i + 1)) = S(i = 1 to n - 1)(S(k = 1 to n - i)2/k) >= S(i = 1 to n - 1)2*ln(n - i + 1) = 2 ln (П(i = 1 to n - 1)n - i + 1)=2 * ln(n!) >=2n ln n >= c n lg n, для некой константы c.

7.4.5
Очевидно, что если будет заранее известна константа k, быстрая сортировка будет выполнять процедуру partion только до момента, когда длина массивов станет меньшеэтой константы, поэтому время ее работы будет O(n lg n/k), но тогда элементы находящиеся в этих почти отсортированных подмассивах не бтолее чем на k отстают от своего метса, то есть сортировка вставкой справится с оствшейся задачей за O(nk). Суммарно сортировка будет выполнена за O(nk + n lg(n/k)).