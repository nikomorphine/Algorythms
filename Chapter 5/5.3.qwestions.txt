5.3.1
swap A[1] with A[Random(1, n)]
for i from 2 to n do
	swap A[i] with A[Random(i, n)]
end for

Начиная цикл со второго элемента полностью сохраняет условие леммы, лишь исключая нулевую перестановку.

5.3.2
Данный алгоритм поможет избежать тождественной сортировки, но он перестанет выполнять равномерное распределение.
Допустим мы хотим перемешать [1, 2, 3], мы должны получить перестановку [3, 2, 1] с какой-нибудь ненулевой вероятностью, однако мы полчим в начале [3, 2, 1], а второй и последний шаг должен будет поменять 1 и 2 местами, поэтому мы получим [3, 1, 2].

5.3.3
Допустим, мы бкдем мешать таким образом три числа, тогда мы получим на выходе 9 исходов, а должны получить 6, то есть нет, равномерного распределения не получится.

5.3.4
Вероятность того, что B[j] = A[i] равна вероятности того, что dest = j, что то же самое, что i + offset = j или i + offset - n = j, что есть 1/n, но алгоритм делает лишь циклические перестановки, то есть не сделает равномерно распереденных перестановок.

5.3.5
Пусть Xij характеризует событие того, что P[i] = P[j], тогда событие того, что все числа разные это дополнение к тому, что есть хотя бы одна пара, то есть необходимо показать, что Pr(Ui,j Xij) <= 1/n
Pr(Ui<j Xij) <= Sum(i = 1, n - 1)(Sum(j = i + 1, n)(Pr{Xi,j})) = Sum(i = 1, n - 1)(Sum(j = i + 1, n)(1/n^3)) = Sum(i = 1, n - 1)((n - i)/n^3) = (n - 1)/(2 n^3) < 1/n.